name: Commit Checks

on: [pull_request]

jobs:
  Black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
  Ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: chartboost/ruff-action@v1
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: isort/isort-action@v1
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Check Commit Format
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: 'Issue \#[0-9]+: .+'
          checkAllCommitMessages: 'true'
          error: 'Your first line has to have the format "Issue #XXX: Commit message".'
          excludeDescription: 'true'
          excludeTitle: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Line Length
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: '.{1,72}'
          error: 'The maximum line length of 72 characters is exceeded.'
          excludeDescription: 'true'
          excludeTitle: 'true'
          checkAllCommitMessages: 'true'
          accessToken: ${{ secrets.GITHUB_TOKEN }}
  check-doc-build:
    name: Test Documentation Build
    runs-on: ubuntu-latest
    steps:
      - uses: pandoc/actions/setup@main
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
            python-version: '3.10'     
      - name: Mock Basilisk
        run: |
          cp docs/sitecustomize.py $(python -c 'import site; print(site.getsitepackages()[0])')/sitecustomize.py
      - name: Install dependencies
        run: |
          pip install -e '.[docs,rllib]'
        # skip finish install steps
      - name: Sphinx build
        run: |
          cd docs
          make html
          cd ..
